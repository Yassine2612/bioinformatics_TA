Bacterial Growth Curves
=======================

The aim of this exercise is to analyse the growth curves of bacteria growing in liquid culture in a 96-well plate. 

.. image:: /contents/images/96well.png
    :align: center

Source: https://www.moleculardevices.com/sites/default/files/en/assets/app-note/br/measure-long-term-cell-growth-using-a-discontinuous-kinetic-reading.pdf

The optical density (OD) of a metabolically-produced dye in each well of the plate has been measured at regular timepoints by a plate reader and the output has been put directly into a file named "201116_EcoliHS_PM2-1.txt". You will need to use the commands you have learned in UNIX and R to:

* find the file on Euler in the home directory of the user ssunagaw
* format the data in the file correctly
* import it into R
* produce suitable visual representations of the data
* analyse the growth of the bacteria in each well

File formatting
---------------

The file is located on Euler under the home directlry of the user ssunagaw. Locate the file and copy it to your home folder on Euler. Please re-visit the corresponding UNIX sections if you need help.

Once the file is copied in your home directory, let's go back to the R console and look at this file in R.

.. hidden-code-block:: r

    # check if the file is in the correct directory
    list.files()
    # load the file
    df = read.table("201116_EcoliHS_PM2-1.txt", sep = "\t")
    # Now look at the file
    View(df)


You may notice bad characters, a lot of header information and blank lines, and then beneath the data is arranged in one table per well. 

Before continuing, consider how you would like the table of data to look when you use it in R. There are 96 wells, multiple time points and four measurements per time point along with a mean and standard deviation. Do you need the precise temperature information?

We can use R to filter the lines and columns we are interested in, as well as improve the way the information is coded (e.g. add Wells name).

.. hidden-code-block:: r

    # filter the data
    # Keep rows we are interested in
    df_filt = df[grepl("Time \\[|Temp\\.|Mean|StDev|0;1|1;1|1;0|0;0", df$V1, useBytes = TRUE),]
    # Make the first column look nicer
    df_filt$V1 = gsub(" \\[.*", "", df_filt$V1)
    # remove the empty column (timepoint 114)
    df_filt = df_filt[,names(df_filt) != "V115"]
    # Add the well names, we know we have 8 rows for each of the 96 wells
    df_filt$Wells = rep(paste0(rep(LETTERS[1:8], each = 12), 1:12), each = 8)

Now that we have cleaned (tidied) the data we should format it for downstream processing (stats, plots, ...).

.. hidden-code-block:: r

    # get the data in a format we can work with
    # We need a column with the Well name, one with the timepoint and one with the Mean measurement (+ time etc)
    ?reshape
    df_long = reshape(df_filt, direction = "long", varying = paste0("V", 2:114), v.names = "Value", idvar = c("V1", "Wells"), timevar = "timepoint")
    df_formatted = reshape(df_long, direction = "wide", idvar = c("Wells", "timepoint"), timevar = "V1")


This is a typical task in bioinformatics, and as you can see, the instrument that produces the data does not make it easy for us. The good thing is that once you'd figured this out once, you can run the same script on future files generated by the device, which will save you a lot of time in the long run compared to manipulating the data in a spreadsheet.

Plotting the data
-----------------

Now we have 96 sets of growth curve data to plot. There are many possibilities here but some useful things to know in R follow. Think about how you can present the data clearly and consistently, so that growth curves can be visually inspected and compared with ease.

.. code-block:: r

    # Produce a pdf of a figure
    pdf("filename.pdf", width=6, height=6)
    plot(...)
    dev.off()

    par(mfrow=c(x,y))                   # This par() option allows you to place plots in a grid x rows by y columns
    par(mar=c(1,1,1,1))                 # This par() option allows you to change the size of the margin of a plot
    plot(..., log="y")                  # Plot y axis on a log-scale
    plot(..., panel.first=grid())       # Allows you to put a function ahead of the plot, i.e.: behind it visually

    # Plot one set of data over another in base R
    plot(...)       # first plot
    par(new=T)      # don't start a new plot (counter-intuitively)
    plot(...)       # second plot

Example solutions follow.

For instance, you can plot the four individual measurements per well:

.. hidden-code-block:: r

    par(mfrow=c(8,12), mar=c(1,1,1,1))
    for(well in unique(df_formatted$Well)){
        data = df_formatted[df_formatted$Well==well,]
        plot(as.numeric(data$Value.Time)/3600, data$`Value.0;1`, xlim=c(0, 24), ylim=c(0.2, 3), xlab="Time (h)", ylab="OD600", log="y", panel.first=grid(), pch=20, type="o", col=1)
        par(new=T)
        plot(as.numeric(data$Value.Time)/3600, data$`Value.1;1`, xlim=c(0, 24), ylim=c(0.2, 3), xlab="Time (h)", ylab="OD600", log="y", panel.first=grid(), pch=20, type="o", col=2)
        par(new=T)
        plot(as.numeric(data$Value.Time)/3600, data$`Value.1;0`, xlim=c(0, 24), ylim=c(0.2, 3), xlab="Time (h)", ylab="OD600", log="y", panel.first=grid(), pch=20, type="o", col=3)
        par(new=T)
        plot(as.numeric(data$Value.Time)/3600, data$`Value.0;0`, xlim=c(0, 24), ylim=c(0.2, 3), xlab="Time (h)", ylab="OD600", log="y", panel.first=grid(), pch=20, type="o", col=4)
    }
    
    
Analysing the data
------------------

Now we will explain a bit about the experiment itself. The bacteria in each well was identical, *Escherichia coli* strain HS, but the carbon source in the media it was growing in was different. A metadata file "metadata.txt" with a list of these carbon sources can be found in the same folder as the data ("201116_EcoliHS_PM2-1.txt"). We are interested in learning about how the bacteria responded to each condition. There are four measurements for each well for each timepoint because the plate reader makes measurements at four different pre-determined points in the well.

Firstly, we would like to understand how accurate the measurements are. With four different measurements at each point, what behaviour can you see? Is this consistent across wells? Do you have any explanation for the behaviour that would make sense in an experimental context?

For now, take the average value of the four measurements and work with these averages for further work. You may want to replot the averaged curves.

.. .. hidden-code-block:: r

    par(mfrow=c(1,1), mar=c(1,1,1,1))
    xvals <- split(as.numeric(df_formatted$Value.Time)/3600, df_formatted$Wells) # in hours
    yvals <- split(as.numeric(df_formatted$Value.Mean), df_formatted$Wells)
    plot(1:max(unlist(xvals)),ylim=(c(0,max(unlist(yvals)))),type="n")
    mapply(lines,xvals,yvals)


What summary statistics do you think you can reasonably determine with the data you have that would reflect the behaviour of the bacteria in each condition?

.. .. hidden-code-block:: r

    # One could for instance look at the Maximum OD difference, which would tell us about successful growth
    growth_summary <- function(x){
        x = as.numeric(x)
        v = max(x) - min(x)
         return(v)
    }
    df_summary = aggregate(df_formatted[,"Value.Mean"], list(df_formatted$Wells), growth_summary)
    View(df_summary)

Now, to link that information to the carbon sources, you can order the values from largest or smallest and identify the carbon source given in a given well. The information about the carbon sources are available in the following file, located on euler: /cluster/home/ssunagaw/teaching/growth_curves/metadata.txt
