Statistics and Packages
=======================

The main use of R of course is for statistics. Here we will cover a few basic analyses you might want to perform.

Correlation
-----------

**cor** and **cor.test** offer various methods for determining whether two sets of data correlate.

.. code-block:: R

    # Correlation
    cor(swiss$Fertility,swiss$Agriculture,method="pearson")
    result <- cor.test(swiss$Fertility,swiss$Agriculture)

**lm** fits a linear model determined by a formula provided, for instance of the form y = m*x + c.

.. code-block:: R

    # Linear model
    model <- lm(Agriculture~Fertility,data=swiss)

**anova** performs analysis of variance on a model object, such as produced by *lm*.

.. code-block:: R

    # ANOVA
    anova(model)

Significance testing
--------------------

There are a near unlimited number of statistical tests available for data, and we're not going to cover which is appropriate for which data.

**t.test** performs one-sample or two-sample t-tests.

.. code-block:: R

    # A two-sample t-test
    data(PlantGrowth)
    t.test(PlantGrowth[PlantGrowth$group=='ctrl',]$weight,PlantGrowth[PlantGrowth$group=='trt2',]$weight)

**chisq.test** performs a chi-squared test, for which **table** is a useful way of counting factors.

.. code-block:: R

    # A chi-squared test
    tab = table(grepl("^V",rownames(swiss)),swiss$Catholic>50)
    chisq.test(tab)

**shapiro.test** is one method to test if your data is normally distributed.

.. code-block:: R

    # A shapiro test
    shapiro.test(swiss$Catholic)

Exercise
--------

* Explore the *swiss* data set using these statistical tools, what significant correlations exist in the data?
* Consider whether any of the variables should be converted to a factor for significance testing.
* Use your knowledge of *plot* to show what you find.

Packages
--------

These are only a few of the many things R can do for you. The real power of R comes from the ability to install and run packages that other people have written, providing more functions, data sets and the ability to handle more data formats.

To load a package that has already been installed, use the **library** command, or the **Packages** feature of R Studio. To install a new package, provided it is hosted by the main R repository, you can use the **install.packages** command.

.. code-block:: R

    # Load a package
    library(lattice)
    densityplot(swiss$Fertility)

    # Install a package
    install.packages("ape")
    library(ape)
    random_tree <- rtree(10)
    plot(random_tree,type="f")
